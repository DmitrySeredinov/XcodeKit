/* A recursive-descent parser generated by peg 0.1.15 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#define YYRULECOUNT 18

// Note: This file is NOT based on xcoder. However, it is licensed under the same license.
/*
 * The sources in the "XcodeKit" directory are based on the Ruby project Xcoder.
 *
 * Copyright (c) 2012 cisimple
 *
 * MIT License
 *
 * Permission is hereby granted, free of charge, to any person obtaining
 * a copy of this software and associated documentation files (the
 * "Software"), to deal in the Software without restriction, including
 * without limitation the rights to use, copy, modify, merge, publish,
 * distribute, sublicense, and/or sell copies of the Software, and to
 * permit persons to whom the Software is furnished to do so, subject to
 * the following conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

#import <Foundation/Foundation.h>
#import "XCObjectIdentifier.h"
#import "XCObjectRegistry.h"
#import "XCProject.h"

static NSString *input = nil;
static NSUInteger inputIndex = 0, inputLength = 0;
static NSString * const outputKey = @"com.wjksun.xcodeproject.pbx-parser-output";
static NSString * const cacheKey = @"com.wjksun.xcodeproject.pbx-parser-cache";

static NSString * XCUnquoteString(NSString *base) {
    NSMutableString *retval = [base mutableCopy];
    
    [retval replaceOccurrencesOfString:@"\\\\" withString:@"\\" options:0 range:NSMakeRange(0, retval.length)];
    [retval replaceOccurrencesOfString:@"\\\"" withString:@"\"" options:0 range:NSMakeRange(0, retval.length)];
    [retval replaceOccurrencesOfString:@"\\r" withString:@"\r" options:0 range:NSMakeRange(0, retval.length)];
    [retval replaceOccurrencesOfString:@"\\n" withString:@"\n" options:0 range:NSMakeRange(0, retval.length)];
    [retval replaceOccurrencesOfString:@"\\t" withString:@"\t" options:0 range:NSMakeRange(0, retval.length)];
    [retval replaceOccurrencesOfString:@"\\v" withString:@"\v" options:0 range:NSMakeRange(0, retval.length)];
    [retval replaceOccurrencesOfString:@"\\f" withString:@"\f" options:0 range:NSMakeRange(0, retval.length)];
    
    return retval;
}

#define YY_INPUT(buf, result, max) \
    do { \
        if (inputIndex > inputLength) {\
            result = 0; \
        } else { \
            int c = (int)[input characterAtIndex:inputIndex++]; \
            *(buf) = c; \
            return 1; \
        } \
    } while (0)

#define YY_LOCAL(T) static T
#define YY_RULE(T) static T

// These three lines are required because I must place an Objective-C object in
// a C struct, and ARC normally forbids that. I must __bridge cast the object to
// a regular pointer, and store that in the struct. The use of a cache is to prevent
// any of the objects from being deallocated prematurely.
#define YYSTYPE void *
#define box(x) \
    ({ \
        NSDictionary *threadDict = [[NSThread currentThread] threadDictionary]; \
        NSMutableSet *cache = threadDict[cacheKey]; \
        [cache addObject:x]; \
        ((__bridge void *) x); \
    })
#define unbox(x) ((__bridge id) x)

#ifndef YY_MALLOC
#define YY_MALLOC(C, N)		malloc(N)
#endif
#ifndef YY_REALLOC
#define YY_REALLOC(C, P, N)	realloc(P, N)
#endif
#ifndef YY_FREE
#define YY_FREE(C, P)		free(P)
#endif
#ifndef YY_LOCAL
#define YY_LOCAL(T)	static T
#endif
#ifndef YY_ACTION
#define YY_ACTION(T)	static T
#endif
#ifndef YY_RULE
#define YY_RULE(T)	static T
#endif
#ifndef YY_PARSE
#define YY_PARSE(T)	T
#endif
#ifndef YYPARSE
#define YYPARSE		yyparse
#endif
#ifndef YYPARSEFROM
#define YYPARSEFROM	yyparsefrom
#endif
#ifndef YYRELEASE
#define YYRELEASE	yyrelease
#endif
#ifndef YY_BEGIN
#define YY_BEGIN	( yy->__begin= yy->__pos, 1)
#endif
#ifndef YY_END
#define YY_END		( yy->__end= yy->__pos, 1)
#endif
#ifdef YY_DEBUG
# define yyprintf(args)	fprintf args
#else
# define yyprintf(args)
#endif
#ifndef YYSTYPE
#define YYSTYPE	int
#endif
#ifndef YY_STACK_SIZE
#define YY_STACK_SIZE 128
#endif

#ifndef YY_BUFFER_SIZE
#define YY_BUFFER_SIZE 1024
#endif

#ifndef YY_PART

typedef struct _yycontext yycontext;
typedef void (*yyaction)(yycontext *yy, char *yytext, int yyleng);
typedef struct _yythunk { int begin, end;  yyaction  action;  struct _yythunk *next; } yythunk;

struct _yycontext {
  char     *__buf;
  int       __buflen;
  int       __pos;
  int       __limit;
  char     *__text;
  int       __textlen;
  int       __begin;
  int       __end;
  int       __textmax;
  yythunk  *__thunks;
  int       __thunkslen;
  int       __thunkpos;
  YYSTYPE   __;
  YYSTYPE  *__val;
  YYSTYPE  *__vals;
  int       __valslen;
#ifdef YY_CTX_MEMBERS
  YY_CTX_MEMBERS
#endif
};

#ifdef YY_CTX_LOCAL
#define YY_CTX_PARAM_	yycontext *yyctx,
#define YY_CTX_PARAM	yycontext *yyctx
#define YY_CTX_ARG_	yyctx,
#define YY_CTX_ARG	yyctx
#ifndef YY_INPUT
#define YY_INPUT(yy, buf, result, max_size)		\
  {							\
    int yyc= getchar();					\
    result= (EOF == yyc) ? 0 : (*(buf)= yyc, 1);	\
    yyprintf((stderr, "<%c>", yyc));			\
  }
#endif
#else
#define YY_CTX_PARAM_
#define YY_CTX_PARAM
#define YY_CTX_ARG_
#define YY_CTX_ARG
yycontext _yyctx= { 0, 0 };
yycontext *yyctx= &_yyctx;
#ifndef YY_INPUT
#define YY_INPUT(buf, result, max_size)			\
  {							\
    int yyc= getchar();					\
    result= (EOF == yyc) ? 0 : (*(buf)= yyc, 1);	\
    yyprintf((stderr, "<%c>", yyc));			\
  }
#endif
#endif

YY_LOCAL(int) yyrefill(yycontext *yy)
{
  int yyn;
  while (yy->__buflen - yy->__pos < 512)
    {
      yy->__buflen *= 2;
      yy->__buf= (char *)YY_REALLOC(yy, yy->__buf, yy->__buflen);
    }
#ifdef YY_CTX_LOCAL
  YY_INPUT(yy, (yy->__buf + yy->__pos), yyn, (yy->__buflen - yy->__pos));
#else
  YY_INPUT((yy->__buf + yy->__pos), yyn, (yy->__buflen - yy->__pos));
#endif
  if (!yyn) return 0;
  yy->__limit += yyn;
  return 1;
}

YY_LOCAL(int) yymatchDot(yycontext *yy)
{
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  ++yy->__pos;
  return 1;
}

YY_LOCAL(int) yymatchChar(yycontext *yy, int c)
{
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  if ((unsigned char)yy->__buf[yy->__pos] == c)
    {
      ++yy->__pos;
      yyprintf((stderr, "  ok   yymatchChar(yy, %c) @ %s\n", c, yy->__buf+yy->__pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchChar(yy, %c) @ %s\n", c, yy->__buf+yy->__pos));
  return 0;
}

YY_LOCAL(int) yymatchString(yycontext *yy, const char *s)
{
  int yysav= yy->__pos;
  while (*s)
    {
      if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
      if (yy->__buf[yy->__pos] != *s)
        {
          yy->__pos= yysav;
          return 0;
        }
      ++s;
      ++yy->__pos;
    }
  return 1;
}

YY_LOCAL(int) yymatchClass(yycontext *yy, unsigned char *bits)
{
  int c;
  if (yy->__pos >= yy->__limit && !yyrefill(yy)) return 0;
  c= (unsigned char)yy->__buf[yy->__pos];
  if (bits[c >> 3] & (1 << (c & 7)))
    {
      ++yy->__pos;
      yyprintf((stderr, "  ok   yymatchClass @ %s\n", yy->__buf+yy->__pos));
      return 1;
    }
  yyprintf((stderr, "  fail yymatchClass @ %s\n", yy->__buf+yy->__pos));
  return 0;
}

YY_LOCAL(void) yyDo(yycontext *yy, yyaction action, int begin, int end)
{
  while (yy->__thunkpos >= yy->__thunkslen)
    {
      yy->__thunkslen *= 2;
      yy->__thunks= (yythunk *)YY_REALLOC(yy, yy->__thunks, sizeof(yythunk) * yy->__thunkslen);
    }
  yy->__thunks[yy->__thunkpos].begin=  begin;
  yy->__thunks[yy->__thunkpos].end=    end;
  yy->__thunks[yy->__thunkpos].action= action;
  ++yy->__thunkpos;
}

YY_LOCAL(int) yyText(yycontext *yy, int begin, int end)
{
  int yyleng= end - begin;
  if (yyleng <= 0)
    yyleng= 0;
  else
    {
      while (yy->__textlen < (yyleng + 1))
	{
	  yy->__textlen *= 2;
	  yy->__text= (char *)YY_REALLOC(yy, yy->__text, yy->__textlen);
	}
      memcpy(yy->__text, yy->__buf + begin, yyleng);
    }
  yy->__text[yyleng]= '\0';
  return yyleng;
}

YY_LOCAL(void) yyDone(yycontext *yy)
{
  int pos;
  for (pos= 0;  pos < yy->__thunkpos;  ++pos)
    {
      yythunk *thunk= &yy->__thunks[pos];
      int yyleng= thunk->end ? yyText(yy, thunk->begin, thunk->end) : thunk->begin;
      yyprintf((stderr, "DO [%d] %p %s\n", pos, thunk->action, yy->__text));
      thunk->action(yy, yy->__text, yyleng);
    }
  yy->__thunkpos= 0;
}

YY_LOCAL(void) yyCommit(yycontext *yy)
{
  if ((yy->__limit -= yy->__pos))
    {
      memmove(yy->__buf, yy->__buf + yy->__pos, yy->__limit);
    }
  yy->__begin -= yy->__pos;
  yy->__end -= yy->__pos;
  yy->__pos= yy->__thunkpos= 0;
}

YY_LOCAL(int) yyAccept(yycontext *yy, int tp0)
{
  if (tp0)
    {
      fprintf(stderr, "accept denied at %d\n", tp0);
      return 0;
    }
  else
    {
      yyDone(yy);
      yyCommit(yy);
    }
  return 1;
}

YY_LOCAL(void) yyPush(yycontext *yy, char *text, int count)
{
  yy->__val += count;
  while (yy->__valslen <= yy->__val - yy->__vals)
    {
      long offset= yy->__val - yy->__vals;
      yy->__valslen *= 2;
      yy->__vals= (YYSTYPE *)YY_REALLOC(yy, yy->__vals, sizeof(YYSTYPE) * yy->__valslen);
      yy->__val= yy->__vals + offset;
    }
}
YY_LOCAL(void) yyPop(yycontext *yy, char *text, int count)   { yy->__val -= count; }
YY_LOCAL(void) yySet(yycontext *yy, char *text, int count)   { yy->__val[count]= yy->__; }

#endif /* YY_PART */

#define	YYACCEPT	yyAccept(yy, yythunkpos0)

YY_RULE(int) yy_ObjectComment(yycontext *yy); /* 18 */
YY_RULE(int) yy_ObjectKey(yycontext *yy); /* 17 */
YY_RULE(int) yy_Integer(yycontext *yy); /* 16 */
YY_RULE(int) yy_ObjectIdentifier(yycontext *yy); /* 15 */
YY_RULE(int) yy_COMMA(yycontext *yy); /* 14 */
YY_RULE(int) yy_ArrayContents(yycontext *yy); /* 13 */
YY_RULE(int) yy_Array(yycontext *yy); /* 12 */
YY_RULE(int) yy_SEMI(yycontext *yy); /* 11 */
YY_RULE(int) yy_Value(yycontext *yy); /* 10 */
YY_RULE(int) yy_EQUALS(yycontext *yy); /* 9 */
YY_RULE(int) yy_String(yycontext *yy); /* 8 */
YY_RULE(int) yy_DictionaryContents(yycontext *yy); /* 7 */
YY_RULE(int) yy_EOL(yycontext *yy); /* 6 */
YY_RULE(int) yy_EOF(yycontext *yy); /* 5 */
YY_RULE(int) yy_Dictionary(yycontext *yy); /* 4 */
YY_RULE(int) yy__(yycontext *yy); /* 3 */
YY_RULE(int) yy_InitialComment(yycontext *yy); /* 2 */
YY_RULE(int) yy_File(yycontext *yy); /* 1 */

YY_ACTION(void) yy_1_Integer(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Integer\n"));
  {
  
        NSString *str = [NSString stringWithUTF8String:yytext];
        __ = box(@([str integerValue]));
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_ObjectComment(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_ObjectComment\n"));
  {
   __ = box([NSString stringWithUTF8String:yytext]); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_ObjectKey(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_ObjectKey\n"));
  {
   __ = box([NSString stringWithUTF8String:yytext]); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_ObjectIdentifier(yycontext *yy, char *yytext, int yyleng)
{
#define comment yy->__val[-1]
#define objKey yy->__val[-2]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_ObjectIdentifier\n"));
  {
  
        XCObjectIdentifier *ident = [[XCObjectIdentifier alloc] initWithKey:unbox(objKey)];
        __ = box(ident);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef comment
#undef objKey
}
YY_ACTION(void) yy_1_ObjectIdentifier(yycontext *yy, char *yytext, int yyleng)
{
#define comment yy->__val[-1]
#define objKey yy->__val[-2]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_ObjectIdentifier\n"));
  {
  
        XCObjectIdentifier *ident = [[XCObjectIdentifier alloc] initWithKey:unbox(objKey) targetDescription:unbox(comment)];
        __ = box(ident);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef comment
#undef objKey
}
YY_ACTION(void) yy_7_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_7_Value\n"));
  {
   __ = ary; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_6_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_6_Value\n"));
  {
   __ = dict; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_5_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_5_Value\n"));
  {
   __ = n; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_4_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_4_Value\n"));
  {
   __ = s; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_3_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_3_Value\n"));
  {
   __ = ident; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_2_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Value\n"));
  {
   __ = box(@NO); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_1_Value(yycontext *yy, char *yytext, int yyleng)
{
#define ary yy->__val[-1]
#define dict yy->__val[-2]
#define n yy->__val[-3]
#define s yy->__val[-4]
#define ident yy->__val[-5]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Value\n"));
  {
   __ = box(@YES); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef ary
#undef dict
#undef n
#undef s
#undef ident
}
YY_ACTION(void) yy_2_String(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_String\n"));
  {
   __ = box(XCUnquoteString([NSString stringWithUTF8String:yytext])); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_1_String(yycontext *yy, char *yytext, int yyleng)
{
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_String\n"));
  {
  
        __ = box([NSString stringWithUTF8String:yytext]);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
}
YY_ACTION(void) yy_2_ArrayContents(yycontext *yy, char *yytext, int yyleng)
{
#define obj yy->__val[-1]
#define existing yy->__val[-2]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_ArrayContents\n"));
  {
  
        NSMutableArray *newArray = [NSMutableArray array];
        [newArray addObject:unbox(obj)];
        __ = box(newArray);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef obj
#undef existing
}
YY_ACTION(void) yy_1_ArrayContents(yycontext *yy, char *yytext, int yyleng)
{
#define obj yy->__val[-1]
#define existing yy->__val[-2]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_ArrayContents\n"));
  {
  
        NSMutableArray *array = unbox(existing);
        [array addObject:unbox(obj)];
        __ = box(array);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef obj
#undef existing
}
YY_ACTION(void) yy_2_Array(yycontext *yy, char *yytext, int yyleng)
{
#define contents yy->__val[-1]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Array\n"));
  {
   __ = box([NSArray array]); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef contents
}
YY_ACTION(void) yy_1_Array(yycontext *yy, char *yytext, int yyleng)
{
#define contents yy->__val[-1]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Array\n"));
  {
   __ = contents; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef contents
}
YY_ACTION(void) yy_2_DictionaryContents(yycontext *yy, char *yytext, int yyleng)
{
#define value yy->__val[-1]
#define dictKey yy->__val[-2]
#define existing yy->__val[-3]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_DictionaryContents\n"));
  {
  
        NSMutableDictionary *existingDict = [NSMutableDictionary dictionary];
        existingDict[unbox(dictKey)] = unbox(value);
        __ = box(existingDict);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef value
#undef dictKey
#undef existing
}
YY_ACTION(void) yy_1_DictionaryContents(yycontext *yy, char *yytext, int yyleng)
{
#define value yy->__val[-1]
#define dictKey yy->__val[-2]
#define existing yy->__val[-3]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_DictionaryContents\n"));
  {
  
        NSMutableDictionary *existingDict = unbox(existing);
        existingDict[unbox(dictKey)] = unbox(value);
        __ = box(existingDict);
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef value
#undef dictKey
#undef existing
}
YY_ACTION(void) yy_2_Dictionary(yycontext *yy, char *yytext, int yyleng)
{
#define contents yy->__val[-1]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_Dictionary\n"));
  {
   __ = box([NSDictionary dictionary]); ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef contents
}
YY_ACTION(void) yy_1_Dictionary(yycontext *yy, char *yytext, int yyleng)
{
#define contents yy->__val[-1]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_Dictionary\n"));
  {
   __ = contents; ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef contents
}
YY_ACTION(void) yy_2_File(yycontext *yy, char *yytext, int yyleng)
{
#define root yy->__val[-1]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_2_File\n"));
  {
  
        [NSException raise:XCInvalidProjectFileException format:@"Syntax error in .pbxproj file"];
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef root
}
YY_ACTION(void) yy_1_File(yycontext *yy, char *yytext, int yyleng)
{
#define root yy->__val[-1]
#define __ yy->__
#define yypos yy->__pos
#define yythunkpos yy->__thunkpos
  yyprintf((stderr, "do yy_1_File\n"));
  {
  
        NSMutableDictionary *threadDict = [[NSThread currentThread] threadDictionary];
        threadDict[outputKey] = [[XCObjectRegistry alloc] initWithProjectPropertyList:unbox(root)];
    ;
  }
#undef yythunkpos
#undef yypos
#undef yy
#undef root
}

YY_RULE(int) yy_ObjectComment(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "ObjectComment"));  if (!yymatchString(yy, "/*")) goto l1;  if (!yy__(yy)) goto l1;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l1;
#undef yytext
#undef yyleng
  }
  {  int yypos4= yy->__pos, yythunkpos4= yy->__thunkpos;  if (!yymatchString(yy, "*/")) goto l4;  goto l1;
  l4:;	  yy->__pos= yypos4; yy->__thunkpos= yythunkpos4;
  }  if (!yymatchDot(yy)) goto l1;
  l2:;	
  {  int yypos3= yy->__pos, yythunkpos3= yy->__thunkpos;
  {  int yypos5= yy->__pos, yythunkpos5= yy->__thunkpos;  if (!yymatchString(yy, "*/")) goto l5;  goto l3;
  l5:;	  yy->__pos= yypos5; yy->__thunkpos= yythunkpos5;
  }  if (!yymatchDot(yy)) goto l3;  goto l2;
  l3:;	  yy->__pos= yypos3; yy->__thunkpos= yythunkpos3;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l1;
#undef yytext
#undef yyleng
  }  if (!yy__(yy)) goto l1;  if (!yymatchString(yy, "*/")) goto l1;  yyDo(yy, yy_1_ObjectComment, yy->__begin, yy->__end);
  yyprintf((stderr, "  ok   %s @ %s\n", "ObjectComment", yy->__buf+yy->__pos));
  return 1;
  l1:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ObjectComment", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_ObjectKey(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "ObjectKey"));  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l6;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\176\000\000\000\176\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l6;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l6;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_ObjectKey, yy->__begin, yy->__end);
  yyprintf((stderr, "  ok   %s @ %s\n", "ObjectKey", yy->__buf+yy->__pos));
  return 1;
  l6:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ObjectKey", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Integer(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "Integer"));  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l7;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l7;
  l8:;	
  {  int yypos9= yy->__pos, yythunkpos9= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l9;  goto l8;
  l9:;	  yy->__pos= yypos9; yy->__thunkpos= yythunkpos9;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l7;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_Integer, yy->__begin, yy->__end);
  yyprintf((stderr, "  ok   %s @ %s\n", "Integer", yy->__buf+yy->__pos));
  return 1;
  l7:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "Integer", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_ObjectIdentifier(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "ObjectIdentifier"));
  {  int yypos11= yy->__pos, yythunkpos11= yy->__thunkpos;  if (!yy_ObjectKey(yy)) goto l12;  yyDo(yy, yySet, -2, 0);  if (!yy__(yy)) goto l12;  if (!yy_ObjectComment(yy)) goto l12;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_ObjectIdentifier, yy->__begin, yy->__end);  goto l11;
  l12:;	  yy->__pos= yypos11; yy->__thunkpos= yythunkpos11;  if (!yy_ObjectKey(yy)) goto l10;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_2_ObjectIdentifier, yy->__begin, yy->__end);
  }
  l11:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "ObjectIdentifier", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l10:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ObjectIdentifier", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_COMMA(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "COMMA"));  if (!yymatchChar(yy, ',')) goto l13;
  yyprintf((stderr, "  ok   %s @ %s\n", "COMMA", yy->__buf+yy->__pos));
  return 1;
  l13:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "COMMA", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_ArrayContents(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 2, 0);
  yyprintf((stderr, "%s\n", "ArrayContents"));
  {  int yypos15= yy->__pos, yythunkpos15= yy->__thunkpos;  if (!yy_ArrayContents(yy)) goto l16;  yyDo(yy, yySet, -2, 0);  if (!yy__(yy)) goto l16;  if (!yy_COMMA(yy)) goto l16;  if (!yy__(yy)) goto l16;  if (!yy_Value(yy)) goto l16;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_1_ArrayContents, yy->__begin, yy->__end);  goto l15;
  l16:;	  yy->__pos= yypos15; yy->__thunkpos= yythunkpos15;  if (!yy_Value(yy)) goto l14;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_2_ArrayContents, yy->__begin, yy->__end);
  }
  l15:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "ArrayContents", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 2, 0);
  return 1;
  l14:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "ArrayContents", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Array(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 1, 0);
  yyprintf((stderr, "%s\n", "Array"));
  {  int yypos18= yy->__pos, yythunkpos18= yy->__thunkpos;  if (!yymatchChar(yy, '(')) goto l19;  if (!yy__(yy)) goto l19;  if (!yy_ArrayContents(yy)) goto l19;  yyDo(yy, yySet, -1, 0);  if (!yy__(yy)) goto l19;
  {  int yypos20= yy->__pos, yythunkpos20= yy->__thunkpos;  if (!yy_COMMA(yy)) goto l20;  goto l21;
  l20:;	  yy->__pos= yypos20; yy->__thunkpos= yythunkpos20;
  }
  l21:;	  if (!yy__(yy)) goto l19;  if (!yymatchChar(yy, ')')) goto l19;  yyDo(yy, yy_1_Array, yy->__begin, yy->__end);  goto l18;
  l19:;	  yy->__pos= yypos18; yy->__thunkpos= yythunkpos18;  if (!yymatchChar(yy, '(')) goto l17;  if (!yy__(yy)) goto l17;  if (!yymatchChar(yy, ')')) goto l17;  yyDo(yy, yy_2_Array, yy->__begin, yy->__end);
  }
  l18:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "Array", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 1, 0);
  return 1;
  l17:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "Array", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_SEMI(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "SEMI"));  if (!yymatchChar(yy, ';')) goto l22;
  yyprintf((stderr, "  ok   %s @ %s\n", "SEMI", yy->__buf+yy->__pos));
  return 1;
  l22:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "SEMI", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Value(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 5, 0);
  yyprintf((stderr, "%s\n", "Value"));
  {  int yypos24= yy->__pos, yythunkpos24= yy->__thunkpos;  if (!yymatchString(yy, "YES")) goto l25;  yyDo(yy, yy_1_Value, yy->__begin, yy->__end);  goto l24;
  l25:;	  yy->__pos= yypos24; yy->__thunkpos= yythunkpos24;  if (!yymatchString(yy, "NO")) goto l26;  yyDo(yy, yy_2_Value, yy->__begin, yy->__end);  goto l24;
  l26:;	  yy->__pos= yypos24; yy->__thunkpos= yythunkpos24;  if (!yy_ObjectIdentifier(yy)) goto l27;  yyDo(yy, yySet, -5, 0);  yyDo(yy, yy_3_Value, yy->__begin, yy->__end);  goto l24;
  l27:;	  yy->__pos= yypos24; yy->__thunkpos= yythunkpos24;  if (!yy_String(yy)) goto l28;  yyDo(yy, yySet, -4, 0);  yyDo(yy, yy_4_Value, yy->__begin, yy->__end);  goto l24;
  l28:;	  yy->__pos= yypos24; yy->__thunkpos= yythunkpos24;  if (!yy_Integer(yy)) goto l29;  yyDo(yy, yySet, -3, 0);  yyDo(yy, yy_5_Value, yy->__begin, yy->__end);  goto l24;
  l29:;	  yy->__pos= yypos24; yy->__thunkpos= yythunkpos24;  if (!yy_Dictionary(yy)) goto l30;  yyDo(yy, yySet, -2, 0);  yyDo(yy, yy_6_Value, yy->__begin, yy->__end);  goto l24;
  l30:;	  yy->__pos= yypos24; yy->__thunkpos= yythunkpos24;  if (!yy_Array(yy)) goto l23;  yyDo(yy, yySet, -1, 0);  yyDo(yy, yy_7_Value, yy->__begin, yy->__end);
  }
  l24:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "Value", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 5, 0);
  return 1;
  l23:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "Value", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_EQUALS(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "EQUALS"));  if (!yymatchChar(yy, '=')) goto l31;
  yyprintf((stderr, "  ok   %s @ %s\n", "EQUALS", yy->__buf+yy->__pos));
  return 1;
  l31:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "EQUALS", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_String(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "String"));
  {  int yypos33= yy->__pos, yythunkpos33= yy->__thunkpos;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l34;
#undef yytext
#undef yyleng
  }  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l34;
  l35:;	
  {  int yypos36= yy->__pos, yythunkpos36= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\000\000\000\000\000\377\003\376\377\377\207\376\377\377\007\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l36;  goto l35;
  l36:;	  yy->__pos= yypos36; yy->__thunkpos= yythunkpos36;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l34;
#undef yytext
#undef yyleng
  }  yyDo(yy, yy_1_String, yy->__begin, yy->__end);  goto l33;
  l34:;	  yy->__pos= yypos33; yy->__thunkpos= yythunkpos33;  if (!yymatchChar(yy, '"')) goto l32;  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_BEGIN)) goto l32;
#undef yytext
#undef yyleng
  }
  l37:;	
  {  int yypos38= yy->__pos, yythunkpos38= yy->__thunkpos;
  {  int yypos39= yy->__pos, yythunkpos39= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\377\377\377\377\373\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377\377")) goto l40;  goto l39;
  l40:;	  yy->__pos= yypos39; yy->__thunkpos= yythunkpos39;  if (!yymatchString(yy, "\\\"")) goto l38;
  }
  l39:;	  goto l37;
  l38:;	  yy->__pos= yypos38; yy->__thunkpos= yythunkpos38;
  }  yyText(yy, yy->__begin, yy->__end);  {
#define yytext yy->__text
#define yyleng yy->__textlen
if (!(YY_END)) goto l32;
#undef yytext
#undef yyleng
  }  if (!yymatchChar(yy, '"')) goto l32;  yyDo(yy, yy_2_String, yy->__begin, yy->__end);
  }
  l33:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "String", yy->__buf+yy->__pos));
  return 1;
  l32:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "String", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_DictionaryContents(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 3, 0);
  yyprintf((stderr, "%s\n", "DictionaryContents"));
  {  int yypos42= yy->__pos, yythunkpos42= yy->__thunkpos;  if (!yy_DictionaryContents(yy)) goto l43;  yyDo(yy, yySet, -3, 0);  if (!yy__(yy)) goto l43;  if (!yy_String(yy)) goto l43;  yyDo(yy, yySet, -2, 0);  if (!yy__(yy)) goto l43;  if (!yy_EQUALS(yy)) goto l43;  if (!yy__(yy)) goto l43;  if (!yy_Value(yy)) goto l43;  yyDo(yy, yySet, -1, 0);  if (!yy__(yy)) goto l43;  if (!yy_SEMI(yy)) goto l43;  yyDo(yy, yy_1_DictionaryContents, yy->__begin, yy->__end);  goto l42;
  l43:;	  yy->__pos= yypos42; yy->__thunkpos= yythunkpos42;  if (!yy_String(yy)) goto l41;  yyDo(yy, yySet, -2, 0);  if (!yy__(yy)) goto l41;  if (!yy_EQUALS(yy)) goto l41;  if (!yy__(yy)) goto l41;  if (!yy_Value(yy)) goto l41;  yyDo(yy, yySet, -1, 0);  if (!yy__(yy)) goto l41;  if (!yy_SEMI(yy)) goto l41;  yyDo(yy, yy_2_DictionaryContents, yy->__begin, yy->__end);
  }
  l42:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "DictionaryContents", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 3, 0);
  return 1;
  l41:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "DictionaryContents", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_EOL(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "EOL"));
  {  int yypos45= yy->__pos, yythunkpos45= yy->__thunkpos;  if (!yymatchChar(yy, '\n')) goto l46;  goto l45;
  l46:;	  yy->__pos= yypos45; yy->__thunkpos= yythunkpos45;  if (!yymatchString(yy, "\r\n")) goto l47;  goto l45;
  l47:;	  yy->__pos= yypos45; yy->__thunkpos= yythunkpos45;  if (!yymatchChar(yy, '\r')) goto l44;
  }
  l45:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "EOL", yy->__buf+yy->__pos));
  return 1;
  l44:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "EOL", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_EOF(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "EOF"));
  {  int yypos49= yy->__pos, yythunkpos49= yy->__thunkpos;  if (!yymatchDot(yy)) goto l49;  goto l48;
  l49:;	  yy->__pos= yypos49; yy->__thunkpos= yythunkpos49;
  }
  yyprintf((stderr, "  ok   %s @ %s\n", "EOF", yy->__buf+yy->__pos));
  return 1;
  l48:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "EOF", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_Dictionary(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 1, 0);
  yyprintf((stderr, "%s\n", "Dictionary"));
  {  int yypos51= yy->__pos, yythunkpos51= yy->__thunkpos;  if (!yymatchChar(yy, '{')) goto l52;  if (!yy__(yy)) goto l52;  if (!yy_DictionaryContents(yy)) goto l52;  yyDo(yy, yySet, -1, 0);  if (!yy__(yy)) goto l52;  if (!yymatchChar(yy, '}')) goto l52;  yyDo(yy, yy_1_Dictionary, yy->__begin, yy->__end);  goto l51;
  l52:;	  yy->__pos= yypos51; yy->__thunkpos= yythunkpos51;  if (!yymatchChar(yy, '{')) goto l50;  if (!yy__(yy)) goto l50;  if (!yymatchChar(yy, '}')) goto l50;  yyDo(yy, yy_2_Dictionary, yy->__begin, yy->__end);
  }
  l51:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "Dictionary", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 1, 0);
  return 1;
  l50:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "Dictionary", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy__(yycontext *yy)
{
  yyprintf((stderr, "%s\n", "_"));
  l54:;	
  {  int yypos55= yy->__pos, yythunkpos55= yy->__thunkpos;  if (!yymatchClass(yy, (unsigned char *)"\000\046\000\000\001\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000")) goto l55;  goto l54;
  l55:;	  yy->__pos= yypos55; yy->__thunkpos= yythunkpos55;
  }
  yyprintf((stderr, "  ok   %s @ %s\n", "_", yy->__buf+yy->__pos));
  return 1;
}
YY_RULE(int) yy_InitialComment(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;
  yyprintf((stderr, "%s\n", "InitialComment"));  if (!yymatchString(yy, "//")) goto l56;
  l57:;	
  {  int yypos58= yy->__pos, yythunkpos58= yy->__thunkpos;
  {  int yypos59= yy->__pos, yythunkpos59= yy->__thunkpos;  if (!yy_EOL(yy)) goto l59;  goto l58;
  l59:;	  yy->__pos= yypos59; yy->__thunkpos= yythunkpos59;
  }  if (!yymatchDot(yy)) goto l58;  goto l57;
  l58:;	  yy->__pos= yypos58; yy->__thunkpos= yythunkpos58;
  }  if (!yy_EOL(yy)) goto l56;
  yyprintf((stderr, "  ok   %s @ %s\n", "InitialComment", yy->__buf+yy->__pos));
  return 1;
  l56:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "InitialComment", yy->__buf+yy->__pos));
  return 0;
}
YY_RULE(int) yy_File(yycontext *yy)
{  int yypos0= yy->__pos, yythunkpos0= yy->__thunkpos;  yyDo(yy, yyPush, 1, 0);
  yyprintf((stderr, "%s\n", "File"));
  {  int yypos61= yy->__pos, yythunkpos61= yy->__thunkpos;  if (!yy_InitialComment(yy)) goto l62;  if (!yy__(yy)) goto l62;  if (!yy_Dictionary(yy)) goto l62;  yyDo(yy, yySet, -1, 0);  if (!yy_EOF(yy)) goto l62;  yyDo(yy, yy_1_File, yy->__begin, yy->__end);  goto l61;
  l62:;	  yy->__pos= yypos61; yy->__thunkpos= yythunkpos61;
  l63:;	
  {  int yypos64= yy->__pos, yythunkpos64= yy->__thunkpos;
  {  int yypos65= yy->__pos, yythunkpos65= yy->__thunkpos;  if (!yy_EOF(yy)) goto l65;  goto l64;
  l65:;	  yy->__pos= yypos65; yy->__thunkpos= yythunkpos65;
  }  if (!yymatchDot(yy)) goto l64;  goto l63;
  l64:;	  yy->__pos= yypos64; yy->__thunkpos= yythunkpos64;
  }  if (!yy_EOF(yy)) goto l60;  yyDo(yy, yy_2_File, yy->__begin, yy->__end);
  }
  l61:;	
  yyprintf((stderr, "  ok   %s @ %s\n", "File", yy->__buf+yy->__pos));  yyDo(yy, yyPop, 1, 0);
  return 1;
  l60:;	  yy->__pos= yypos0; yy->__thunkpos= yythunkpos0;
  yyprintf((stderr, "  fail %s @ %s\n", "File", yy->__buf+yy->__pos));
  return 0;
}

#ifndef YY_PART

typedef int (*yyrule)(yycontext *yy);

YY_PARSE(int) YYPARSEFROM(YY_CTX_PARAM_ yyrule yystart)
{
  int yyok;
  if (!yyctx->__buflen)
    {
      yyctx->__buflen= YY_BUFFER_SIZE;
      yyctx->__buf= (char *)YY_MALLOC(yyctx, yyctx->__buflen);
      yyctx->__textlen= YY_BUFFER_SIZE;
      yyctx->__text= (char *)YY_MALLOC(yyctx, yyctx->__textlen);
      yyctx->__thunkslen= YY_STACK_SIZE;
      yyctx->__thunks= (yythunk *)YY_MALLOC(yyctx, sizeof(yythunk) * yyctx->__thunkslen);
      yyctx->__valslen= YY_STACK_SIZE;
      yyctx->__vals= (YYSTYPE *)YY_MALLOC(yyctx, sizeof(YYSTYPE) * yyctx->__valslen);
      yyctx->__begin= yyctx->__end= yyctx->__pos= yyctx->__limit= yyctx->__thunkpos= 0;
    }
  yyctx->__begin= yyctx->__end= yyctx->__pos;
  yyctx->__thunkpos= 0;
  yyctx->__val= yyctx->__vals;
  yyok= yystart(yyctx);
  if (yyok) yyDone(yyctx);
  yyCommit(yyctx);
  return yyok;
}

YY_PARSE(int) YYPARSE(YY_CTX_PARAM)
{
  return YYPARSEFROM(YY_CTX_ARG_ yy_File);
}

YY_PARSE(yycontext *) YYRELEASE(yycontext *yyctx)
{
  if (yyctx->__buflen)
    {
      yyctx->__buflen= 0;
      YY_FREE(yyctx, yyctx->__buf);
      YY_FREE(yyctx, yyctx->__text);
      YY_FREE(yyctx, yyctx->__thunks);
      YY_FREE(yyctx, yyctx->__vals);
    }
  return yyctx;
}

#endif


XCObjectRegistry *XCParsePBXProjectFile(NSString *source) {
    input = source;
    inputIndex = 0;
    inputLength = source.length;
    
    NSMutableDictionary *threadDict = [[NSThread currentThread] threadDictionary];
    [threadDict removeObjectForKey:outputKey];
    threadDict[cacheKey] = [NSMutableSet set];
    
    yyparse();
    
    threadDict = [[NSThread currentThread] threadDictionary];
    XCObjectRegistry *retval = threadDict[outputKey];
    [threadDict removeObjectForKey:outputKey];
    [threadDict removeObjectForKey:cacheKey];
    return retval;
}

